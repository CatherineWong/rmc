{"There are four stacks of red blocks": "condition(filter(isRed, world.stacks).length == 4);", "There is one stack of yellow blocks": "condition(filter(isYellow, world.stacks).length == 1);", "There are two stacks of yellow blocks": "condition(filter(isYellow, world.stacks).length == 2);", "There is one stack of red blocks": "condition(filter(isRed, world.stacks).length == 1);", "There are two stacks of red blocks": "condition(filter(isRed, world.stacks).length == 2);", "There are yellow blocks on the left side of the table": "condition(filter(isOnLeft, filter(isYellow, world.blocks)).length > 0);", "There are red blocks on the right edge of the table": "condition(filter(isOnEdge, filter(isOnRight, filter(isRed, world.blocks))).length > 0);", "There are red blocks on the left edge of the table": "condition(filter(isOnEdge, filter(isOnLeft, filter(isRed, world.blocks))).length > 0);", "There are yellow blocks on the right edge of the table": "condition(filter(isOnEdge, filter(isOnRight, filter(isYellow, world.blocks))).length > 0);", "There are yellow blocks on the edges of the table": "condition(filter(isOnEdge, filter(isYellow, world.blocks)).length > 0);", "There are red blocks on the center of the table": "condition(filter(isOnCenter, filter(isRed, world.blocks)).length > 0);", "All of the blocks are red": "condition(all(isRed, world.blocks));", "Most of the blocks are yellow": "condition(filter(isYellow, world.blocks).length > world.blocks.length/2);", "There are many red blocks": "condition(filter(isRed, world.blocks).length >= 6);", "There are a few yellow blocks": "condition(filter(isYellow, world.blocks).length > 1 && filter(isYellow, world.blocks).length <= 4);", "There are several stacks of yellow blocks": "condition(filter(isYellow, world.stacks).length > 2 && filter(isYellow, world.stacks).length <= 5);", "There are few stacks of red blocks": "condition(filter(isRed, world.stacks).length <= 4);", "Half of the blocks are yellow": "condition(filter(isYellow, world.blocks).length == world.blocks.length/2);", "Half of the blocks are red": "condition(filter(isRed, world.blocks).length == world.blocks.length/2);", "None of the blocks are red": "condition(filter(isRed, world.blocks).length == 0);", "No less than half of the blocks are yellow": "condition(filter(isYellow, world.blocks).length >= world.blocks.length/2);", "There are tall stacks of red blocks": "condition(filter(isTall, filter(isRed, world.stacks)).length > 0);", "There are short stacks of yellow blocks": "condition(filter(isShort, filter(isYellow, world.stacks)).length > 0);", "There are stacks of yellow blocks": "condition(filter(isYellow, world.stacks).length > 0);", "There are short stacks of red blocks": "condition(filter(isShort, filter(isRed, world.stacks)).length > 0);", "There are four yellow blocks on the left side of the table": "condition(filter(isOnLeft, filter(isYellow, world.blocks)).length == 4);", "There are seven red blocks on the middle": "condition(filter(isOnMiddle, filter(isRed, world.blocks)).length == 7);", "There is one stack of red blocks on the right side of the table": "condition(filter(isOnRight, filter(isRed, world.stacks)).length == 1);", "There is one stack of yellow blocks on the center": "condition(filter(isOnCenter, filter(isYellow, world.stacks)).length == 1);", "There is one stack of yellow blocks on the left side of the table": "condition(filter(isOnLeft, filter(isYellow, world.stacks)).length == 1);", "There are two stacks of red blocks on the middle": "condition(filter(isOnMiddle, filter(isRed, world.stacks)).length == 2);", "There are two stacks of red blocks on the left side of the table": "condition(filter(isOnLeft, filter(isRed, world.stacks)).length == 2);", "There are two stacks of yellow blocks on the right side": "condition(filter(isOnRight, filter(isYellow, world.stacks)).length == 2);", "There is one stack of red blocks near the yellow stack": "condition(filter(isNear(filter(isYellow, world.stacks)[0]), filter(isRed, world.stacks)).length == 1);", "There are three stacks of red blocks on the left side of the table": "condition(filter(isOnLeft, filter(isRed, world.stacks)).length == 3);", "There are three yellow blocks on the left side of the table": "condition(filter(isOnLeft, filter(isYellow, world.blocks)).length == 3);", "There are six red blocks on the middle": "condition(filter(isOnMiddle, filter(isRed, world.blocks)).length == 6);", "There are three red blocks on the right side": "condition(filter(isOnRight, filter(isRed, world.blocks)).length == 3);", "There are more red blocks than yellow blocks on the table": "condition(filter(isRed, world.blocks).length > filter(isYellow, world.blocks).length);", "There are more yellow blocks than red blocks on the edges of the table": "condition(filter(isOnEdge, filter(isYellow, world.blocks)).length > filter(isOnEdge, filter(isRed, world.blocks)).length);", "There are many blocks on the table": "condition(world.blocks.length >= 6);", "Most of the blocks on the table are yellow": "condition(filter(isYellow, world.blocks).length > world.blocks.length/2);", "All of the blocks on the middle of the table are red": "condition(filter(isOnMiddle, world.blocks).length > 0 && all(isRed, filter(isOnMiddle, world.blocks)));", "All of the blocks on the edges of the table are yellow": "condition(filter(isOnEdge, world.blocks).length > 0 && all(isYellow, filter(isOnEdge, world.blocks)));", "Not all of the blocks on the left side are yellow": "condition(!all(isYellow, filter(isOnLeft, world.blocks)));", "Most of the blocks on the right side are red": "condition(filter(isRed, filter(isOnRight, world.blocks)).length > filter(isOnRight, world.blocks).length/2);", "There are red blocks on the edges of the table": "condition(filter(isOnEdge, filter(isRed, world.blocks)).length > 0);", "There are no yellow blocks on the egdes of the table": "condition(filter(isOnEdge, filter(isYellow, world.blocks)).length == 0);", "There are many yellow blocks on the left side of the table": "condition(filter(isOnLeft, filter(isYellow, world.blocks)).length >= 6);", "There are no blocks on the middle": "condition(filter(isOnMiddle, world.blocks).length == 0);", "There are no blocks on the right side": "condition(filter(isOnRight, world.blocks).length == 0);", "There are some stacks of red blocks on the middle of the table": "condition(filter(isOnMiddle, filter(isRed, world.stacks)).length > 0);", "There are some stacks of yellow blocks on the right side": "condition(filter(isOnRight, filter(isYellow, world.stacks)).length > 0);", "There are no blocks on the left side": "condition(filter(isOnLeft, world.blocks).length == 0);", "There are several stacks of red blocks on the table": "condition(filter(isRed, world.stacks).length > 2 && filter(isRed, world.stacks).length <= 5);", "There are at most two stacks of yellow blocks on the table": "condition(filter(isYellow, world.stacks).length <= 2);", "There are at least seven red blocks on the table": "condition(filter(isRed, world.blocks).length >= 7);", "There are many yellow blocks on the table": "condition(filter(isYellow, world.blocks).length >= 6);", "There are at most six yellow blocks on the table": "condition(filter(isYellow, world.blocks).length <= 6);", "There are no more than four red blocks on the table": "condition(filter(isRed, world.blocks).length <= 4);", "There are eight red blocks on the table": "condition(filter(isRed, world.blocks).length == 8);", "There are no yellow blocks on the table": "condition(filter(isYellow, world.blocks).length == 0);", "There are two tall stacks of yellow blocks": "condition(filter(isTall, filter(isYellow, world.stacks)).length == 2);", "There are two short stacks of red blocks": "condition(filter(isShort, filter(isRed, world.stacks)).length == 2);", "There is one tall stack of red blocks": "condition(filter(isTall, filter(isRed, world.stacks)).length == 1);", "There are two short stacks of yellow blocks": "condition(filter(isShort, filter(isYellow, world.stacks)).length == 2);", "There are three short stacks of red blocks": "condition(filter(isShort, filter(isRed, world.stacks)).length == 3);", "There are stacks of red blocks": "condition(filter(isRed, world.stacks).length > 0);", "All of the yellow stacks are tall": "condition(all(isTall, filter(isYellow, world.stacks)));", "All of the red stacks are short": "condition(all(isShort, filter(isRed, world.stacks)));", "All of the red stacks are tall": "condition(all(isTall, filter(isRed, world.stacks)));", "Some of the yellow stacks are tall": "condition(filter(isTall, filter(isYellow, world.stacks)).length > 0);", "There are some short stacks of yellow blocks": "condition(filter(isShort, filter(isYellow, world.stacks)).length > 0);", "There are some tall stacks of red blocks": "condition(filter(isTall, filter(isRed, world.stacks)).length > 0);", "There are many red blocks on the left side of the table": "condition(filter(isOnLeft, filter(isRed, world.blocks)).length >= 6);", "There is at most one stack of yellow blocks on the right side": "condition(filter(isOnRight, filter(isYellow, world.stacks)).length <= 1);", "There are some red blocks on the middle": "condition(filter(isOnMiddle, filter(isRed, world.blocks)).length > 0);", "There are two stacks of yellow blocks on the left side": "condition(filter(isOnLeft, filter(isYellow, world.stacks)).length == 2);", "There are three yellow blocks on the right side of the table": "condition(filter(isOnRight, filter(isYellow, world.blocks)).length == 3);", "There are many red blocks on the right side": "condition(filter(isOnRight, filter(isRed, world.blocks)).length >= 6);", "There are four red blocks on the left side of the table": "condition(filter(isOnLeft, filter(isRed, world.blocks)).length == 4);", "There are no less than five yellow blocks on the right side": "condition(filter(isOnRight, filter(isYellow, world.blocks)).length >= 5);", "There are eight red blocks on the middle of the table": "condition(filter(isOnMiddle, filter(isRed, world.blocks)).length == 8);", "No more than half of the blocks on the edges of the table are yellow": "condition(filter(isYellow, filter(isOnEdge, world.blocks)).length <= filter(isOnEdge, world.blocks).length/2);", "There is one stack of yellow blocks on the middle of the table": "condition(filter(isOnMiddle, filter(isYellow, world.stacks)).length == 1);", "There are two short stacks of red blocks near the yellow stack": "condition(filter(isNear(filter(isOnMiddle, filter(isYellow, world.stacks))[0]), filter(isShort, filter(isRed, world.stacks))).length == 2);", "There is one stack of red blocks on the left edge of the table": "condition(filter(isOnEdge, filter(isOnLeft, filter(isRed, world.stacks))).length == 1);", "There are two tall stacks of yellow blocks near the red stack": "condition(filter(isNear(filter(isOnEdge, filter(isOnLeft, filter(isRed, world.stacks)))[0]), filter(isTall, filter(isYellow, world.stacks))).length == 2);", "There is one stack of yellow blocks on the center of the table": "condition(filter(isOnCenter, filter(isYellow, world.stacks)).length == 1);", "There is one tall stack of red blocks near the yellow stack": "condition(filter(isNear(filter(isOnCenter, filter(isYellow, world.stacks))[0]), filter(isTall, filter(isRed, world.stacks))).length == 1);", "There is one tall stack of red blocks on the right edge of the table": "condition(filter(isOnEdge, filter(isOnRight, filter(isTall, filter(isRed, world.stacks)))).length == 1);", "There are two yellow blocks on the middle of the table": "condition(filter(isOnMiddle, filter(isYellow, world.blocks)).length == 2);", "There are less stacks of yellow blocks than stacks of red blocks on the table": "condition(filter(isYellow, world.stacks).length < filter(isRed, world.stacks).length);", "All of the yellow stacks are short": "condition(filter(isYellow, world.stacks).length > 0 && all(isShort, filter(isYellow, world.stacks)));", "There are a few blocks on the edges of the table": "condition(filter(isOnEdge, world.blocks).length > 1 && filter(isOnEdge, world.blocks).length <= 4);", "Less than half of the blocks on the edges are yellow": "condition(filter(isYellow, filter(isOnEdge, world.blocks)).length < filter(isOnEdge, world.blocks).length/2);", "There are more stacks of yellow blocks than stacks of red blocks on the table": "condition(filter(isYellow, world.stacks).length > filter(isRed, world.stacks).length);", "None of the yellow stacks are tall": "condition(filter(isTall, filter(isYellow, world.stacks)).length == 0);", "Most of the red stacks are tall": "condition(filter(isTall, filter(isRed, world.stacks)).length > filter(isRed, world.stacks).length/2);", "None of the red stacks are tall": "condition(filter(isTall, filter(isRed, world.stacks)).length == 0);", "All of the yellow blocks are on the egdes of the table": "condition(all(isOnEdge, filter(isYellow, world.blocks)));", "There are several short stacks of red blocks": "condition(filter(isShort, filter(isRed, world.stacks)).length > 2 && filter(isShort, filter(isRed, world.stacks)).length <= 5);", "There are a few tall stacks of red blocks": "condition(filter(isTall, filter(isRed, world.stacks)).length > 1 && filter(isTall, filter(isRed, world.stacks)).length <= 4);", "There are four stacks of yellow blocks": "condition(filter(isYellow, world.stacks).length == 4);", "There are many stacks of blocks on the table": "condition(world.stacks.length >= 6);", "There are no tall yellow stacks": "condition(filter(isTall, filter(isYellow, world.stacks)).length == 0);", "There are less than four tall red stacks": "condition(filter(isTall, filter(isRed, world.stacks)).length <= 4);", "There are three stacks of red blocks": "condition(filter(isRed, world.stacks).length == 3);", "There are no tall red stacks": "condition(filter(isTall, filter(isRed, world.stacks)).length == 0);", "There are no short yellow stacks": "condition(filter(isShort, filter(isYellow, world.stacks)).length == 0);", "There is one tall stack of yellow blocks on the middle of the table": "condition(filter(isOnMiddle, filter(isTall, filter(isYellow, world.stacks))).length == 1);", "There are some red blocks near the yellow stack": "condition(filter(isNear(filter(isOnMiddle, filter(isTall, filter(isYellow, world.stacks)))[0]), filter(isRed, world.blocks)).length > 0);", "There is at least one tall stack of red blocks on the middle of the table": "condition(filter(isOnMiddle, filter(isTall, filter(isRed, world.stacks))).length >= 1);", "There are at least two tall stacks of yellow blocks on the left side of the table": "condition(filter(isOnLeft, filter(isTall, filter(isYellow, world.stacks))).length >= 2);", "There is at most one tall stack of red blocks on the right side": "condition(filter(isOnRight, filter(isTall, filter(isRed, world.stacks))).length <= 1);", "There is one tall stack of yellow blocks on the left edge of the table": "condition(filter(isOnEdge, filter(isOnLeft, filter(isTall, filter(isYellow, world.stacks)))).length == 1);", "There are no red blocks on the right edge": "condition(filter(isOnEdge, filter(isOnRight, filter(isRed, world.stacks))).length == 0);", "There are two stacks of blocks on the left side of the table": "condition(filter(isOnLeft, world.stacks).length == 2);", "There are three stacks of blocks on the right side": "condition(filter(isOnRight, world.stacks).length == 3);", "All of the stacks on the left side are yellow": "condition(all(isYellow, filter(isOnLeft, world.stacks)));", "Not all of the stacks on the right side are red": "condition(!all(isRed, filter(isOnRight, world.stacks)));", "There are at least five stacks of blocks on the table": "condition(world.stacks.length >= 5);", "No more than half of the stacks are tall": "condition(filter(isTall, world.stacks).length <= world.stacks.length/2);", "Most of the stacks are red": "condition(filter(isRed, world.stacks).length > world.stacks.length/2);", "Most of the stacks are on the right side": "condition(filter(isOnRight, world.stacks).length > world.stacks.length/2);"}